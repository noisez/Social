{"version":3,"sources":["components/Header/Header.jsx","components/Nav/Nav.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Nav","react_router_dom","to","Post","props","message","likes","MyPosts","postsElements","id","map","post","MyPosts_Post_Post","placeholder","type","ProfileInfo","Profile","Profile_ProfileInfo_ProfileInfo","Profile_MyPosts_MyPosts","Dialog","name","Message","Dialogs","dialogsElements","dialog","Dialogs_Dialog","messagesElements","Dialogs_Message","News","Music","Settings","App","components_Header_Header","components_Nav_Nav","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qaAWeA,qBATA,WACX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,+EAA+EC,IAAI,OACvFF,UAAU,mCCYZG,EAdH,WACR,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,WAAWL,UAAU,aAAjC,YAC1BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,WAAWL,UAAU,aAAjC,aAC1BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,QAAQL,UAAU,aAA9B,SAC1BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,SAASL,UAAU,aAA/B,UAC1BH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAG,YAAYL,UAAU,aAAlC,gBCG3BM,SAZF,SAACC,GACV,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,4EAA4EC,IAAI,OAAOF,UAAU,cAC1GH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcO,EAAMC,UAErCX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,UAAiCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeO,EAAME,WCenEC,SArBC,WAEZ,IAMIC,EANW,CACX,CAACC,GAAI,EAAGJ,QAAS,4BAA6BC,MAAO,MACrD,CAACG,GAAI,EAAGJ,QAAS,qBAAsBC,MAAO,KAC9C,CAACG,GAAI,EAAGJ,QAAS,OAAQC,MAAO,MAGPI,IAAK,SAAAC,GAAI,OAAIjB,EAAAC,EAAAC,cAACgB,EAAD,CAAMP,QAASM,EAAKN,QAASC,MAAOK,EAAKL,UAEnF,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,YAAUiB,YAAY,qBAAqBhB,UAAU,eACrDH,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASjB,UAAU,YAAhC,OACCW,MCeFO,SA/BK,SAACX,GACjB,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,2GAA2GC,IAAI,OAAOF,UAAU,iBAE7IH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,kBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,cAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,SACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,cACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,gBAEJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,aACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,8BCTTmB,SAZC,WACZ,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,mEAAmEC,IAAI,OAAOF,UAAU,iBAErGH,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,SCRNC,SAAS,SAACf,GACZ,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAASC,GAAI,YAAcE,EAAMK,IAAKL,EAAMgB,SAKlDC,EAAU,SAACjB,GACb,OACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBO,EAAMC,UAsChCiB,EAlCC,SAAClB,GAEb,IAgBImB,EAhBc,CACd,CAACd,GAAI,EAAGW,KAAM,UACd,CAACX,GAAI,EAAGW,KAAM,aACd,CAACX,GAAI,EAAGW,KAAM,WACd,CAACX,GAAI,EAAGW,KAAM,SACd,CAACX,GAAI,EAAGW,KAAM,aAWgBV,IAAK,SAAAc,GAAM,OAAI9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAQL,KAAMI,EAAOJ,KAAMX,GAAIe,EAAOf,OAEnFiB,EAVe,CACf,CAACjB,GAAI,EAAGJ,QAAS,oBACjB,CAACI,GAAI,EAAGJ,QAAS,qBACjB,CAACI,GAAI,EAAGJ,QAAS,YACjB,CAACI,GAAI,EAAGJ,QAAS,iCACjB,CAACI,GAAI,EAAGJ,QAAS,2BAKeK,IAAK,SAAAL,GAAO,OAAIX,EAAAC,EAAAC,cAAC+B,EAAD,CAAStB,QAASA,EAAQA,YAE9E,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACV0B,GAEL7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACV6B,KCnCFE,SARF,WACT,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,UCMOgC,SARD,WACV,OACInC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,WCMOiC,SARE,WACb,OACIpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,qBC+COkC,EAxCH,WACR,OACIrC,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,MACAvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWrB,IACxCtB,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWf,IAClC5B,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWT,IAC/BlC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWR,IAChCnC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWP,QCXnCQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e748fb6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css'\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src=\"https://i.pinimg.com/originals/33/b8/69/33b869f90619e81763dbf1fccc896d8d.jpg\" alt=\"icon\"\r\n                 className=\"header__logo\"/>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './nav.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <ul className=\"nav__list\">\r\n                <li className=\"nav__item\"><NavLink to=\"/profile\" className=\"nav__link\">Profile</NavLink></li>\r\n                <li className=\"nav__item\"><NavLink to=\"/dialogs\" className=\"nav__link\">Messages</NavLink></li>\r\n                <li className=\"nav__item\"><NavLink to=\"/news\" className=\"nav__link\">News</NavLink></li>\r\n                <li className=\"nav__item\"><NavLink to=\"/music\" className=\"nav__link\">Music</NavLink></li>\r\n                <li className=\"nav__item\"><NavLink to=\"/settings\" className=\"nav__link\">Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './post.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post__body\">\r\n                <img src=\"https://fanparty.ru/fanclubs/highlander/gallery/343346_highlander_pic.JPG\" alt=\"icon\" className=\"post__img\"/>\r\n                <p className=\"post__text\">{props.message}</p>\r\n            </div>\r\n            <p className=\"post__like\">Likes: <span className=\"like__count\">{props.likes}</span></p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport Post from './Post/Post'\r\nimport './my_posts.css'\r\n\r\nconst MyPosts = () => {\r\n\r\n    let postData = [\r\n        {id: 1, message: 'This is my favorite post!', likes: '10'},\r\n        {id: 2, message: 'This is first post', likes: '4'},\r\n        {id: 3, message: 'test', likes: '0'}\r\n    ];\r\n\r\n    let postsElements = postData.map( post => <Post message={post.message} likes={post.likes}/> );\r\n\r\n    return (\r\n        <div className=\"my-posts\">\r\n            <div className=\"my-posts__new\">\r\n                <textarea placeholder=\"Write your message\" className=\"new__input\"></textarea>\r\n                <button type=\"button\" className=\"new__add\">Add</button>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport './profile-info.css';\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div className=\"profile__info\">\r\n            <div className=\"info__avatar\">\r\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQiCNRITS-4ALEzg_xLZwWmiv5-6UCGkuhKjgNRe6kQbJALzcAf\" alt=\"icon\" className=\"avatar__img\"/>\r\n            </div>\r\n            <div className=\"info__personal\">\r\n                <p className=\"personal__name\">Sergey K.</p>\r\n                <ul className=\"personal__common\">\r\n                    <li className=\"common__item\">\r\n                        <span className=\"item__left\">Date of birth:</span>\r\n                        <span className=\"item__right\">16.02.-50</span>\r\n                    </li>\r\n                    <li className=\"common__item\">\r\n                        <span className=\"item__left\">City:</span>\r\n                        <span className=\"item__right\">Kiev</span>\r\n                    </li>\r\n                    <li className=\"common__item\">\r\n                        <span className=\"item__left\">Education:</span>\r\n                        <span className=\"item__right\">High school</span>\r\n                    </li>\r\n                    <li className=\"common__item\">\r\n                        <span className=\"item__left\">Web site:</span>\r\n                        <span className=\"item__right\">http://something.com</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\nimport './profile.css'\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__header\">\r\n                <img src=\"https://marin.ru/ai/1000/geo.113.thumb.big/fiji-main(pics.1).jpg\" alt=\"icon\" className=\"header__img\"/>\r\n            </div>\r\n            <ProfileInfo/>\r\n            <MyPosts/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport './dialogs.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Dialog = (props) => {\r\n    return (\r\n        <div className=\"names__item\">\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"messages__item\">{props.message}</div>\r\n    )\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsData = [\r\n        {id: 1, name: 'Serhii'},\r\n        {id: 2, name: 'Alexander'},\r\n        {id: 3, name: 'Vitaliy'},\r\n        {id: 4, name: 'Julia'},\r\n        {id: 5, name: 'Iron Man'},\r\n    ];\r\n\r\n    let messagesData = [\r\n        {id: 1, message: 'Hi, how are you?'},\r\n        {id: 2, message: 'Hello, i am fine.'},\r\n        {id: 3, message: 'Great :)'},\r\n        {id: 4, message: 'What did you do last weekend?'},\r\n        {id: 5, message: 'I worked all the time.'}\r\n    ];\r\n\r\n    let dialogsElements = dialogsData.map( dialog => <Dialog name={dialog.name} id={dialog.id}/>);\r\n\r\n    let messagesElements = messagesData.map( message => <Message message={message.message}/>);\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogs__names\">\r\n                {dialogsElements}\r\n            </div>\r\n            <div className=\"dialogs__messages\">\r\n                {messagesElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport './news.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className=\"dialogs\">\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport './music.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className=\"music\">\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport './settings.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className=\"settings\">\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport './main.css';\r\nimport Header from './components/Header/Header';\r\nimport Nav from './components/Nav/Nav';\r\nimport Profile from './components/Profile/Profile';\r\nimport Dialogs from './components/Dialogs/Dialogs';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"app-wrapper\">\r\n                <Header/>\r\n                <Nav/>\r\n                <div className=\"content\">\r\n                    <Route exact path='/profile' component={Profile}/>\r\n                    <Route path='/dialogs' component={Dialogs}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    )\r\n};\r\n\r\n\r\n// function App() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//         <p>\r\n//           Edit <code>src/App.js</code> and save to reload.\r\n//         </p>\r\n//         <a\r\n//           className=\"App-link\"\r\n//           href=\"https://reactjs.org\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//         >\r\n//           Learn React\r\n//         </a>\r\n//       </header>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}